#!/bin/sh -eu
# vim: smartindent tabstop=4 shiftwidth=4 expandtab number colorcolumn=80
#
# This file is part of the Assimilation Project.
#
# Author: Leam Hall <leamhall@gmail.com>
# Copyright (C) 2013,2014 - Assimilation Systems Limited
#
# Free support is available from the Assimilation Project community - http://assimproj.org
# Paid support is available from Assimilation Systems Limited - http://assimilationsystems.com
#
# The Assimilation software is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# The Assimilation software is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with the Assimilation Project software.  If not, see http://www.gnu.org/licenses/
#
PATH=/bin:/usr/bin:/sbin:/usr/sbin:/usr/local/bin:/usr/local/sbin

set -e
: ${PASSWD_FILE:=/etc/passwd}

spacer='  '
two_spacers='   '
comma=',
'

discover() {
  outcount=0
    cat <<-END
{
  "discovertype": "passwd",
  "description": "${PASSWD_FILE} information",
  "host": "$(uname -n)",
  "source": "$0",
  "data": {    
END

  while IFS=: read user placeholder uid gid comment home shell
  do
    if [ ${outcount} == 1 ]
    then    
        printf "%s\n" "${comma}"
    fi
    outcount=1

  if [ -z ${user} ]
  then
    _USER='NULL'
  else
    _USER=${user}
  fi

  placeholder='x'

  expr ${uid} + 1 > /dev/null 2>&1
  if [ $? == 0 ]
  then
    _UID=$uid
  else
    _UID=NULL
  fi

  expr ${gid} + 1 > /dev/null 2>&1
  if [ $? == 0 ]
  then
    _GID=$gid
  else
    _GID=NULL
  fi

  if [ -z "${comment}" ]
  then
    _COMMENT=""
  else
    _COMMENT=${comment}
  fi

  if [ -z "${home}" ]
  then
    _HOME=""
  else
    _HOME=${home}
  fi

  if [ -z "${shell}" ]
  then
    _SHELL=""
  else
    _SHELL=${shell}
  fi

  printf "%s"  "\"${_USER}\" : {
"
  printf "%s %s" '"placeholder": ' "\"${placeholder}\"$comma"
  printf "%s %s" '"uid": ' "${_UID}$comma"
  printf "%s %s" '"gid": ' "${_GID}$comma"
  printf "%s %s" '"comment": ' "\"${_COMMENT}\"$comma"
  printf "%s %s" '"home": ' "\"${_HOME}\"$comma"
  printf "%s %s}" '"shell": ' "\"${_SHELL}\""
  done < ${PASSWD_FILE}

  printf "\n}\n}\n" 
}

discover
