language: minimal

env:
  - BUILD_ENV=ubuntu:18.04

install:
  - docker network create --driver=bridge my-net
  - |
    docker run -d\
    --env=NEO4J_AUTH=none \
    --publish=7474:7474 --publish=7687:7687 \
    --volume=$HOME/neo4j/data:/data \
    --name neo4j \
    --net=my-net \
    neo4j:3.5.6

script:
  # $DOCKER should contain all the build prereqs installed
  - DOCKER=$(echo $BUILD_ENV | tr -d '[:.]')
  - docker build -f ci/Dockerfiles/$DOCKER.dockerfile -t $DOCKER .
  # use $DOCKER to build packages through cmake
  # input:
  # path-to-source-directory = /root/assimilation/src
  # output:
  # path-to-binary-directory = /root/assimilation/bin
  # path-to-build-artifacts = /root/assimilation/ba
  - |
    docker run \
    -v $TRAVIS_BUILD_DIR:/root/assimilation/src \
    -v /tmp/bin:/root/assimilation/bin \
    -v /tmp/ba:/root/assimilation/ba \
    $DOCKER \
    bash -c "cmake ../src && cpack && mv *.deb /root/assimilation/ba"
  # display any logs from the previous step for debugging
  - find /tmp/bin/ -type f -name '*.log' -exec echo {} \; -exec cat {} \;
  # test the new packages in a stock image (install and run tests)
  - |
    docker run \
    --env=BUILD_ENV=$BUILD_ENV \
    -v $TRAVIS_BUILD_DIR:/root/assimilation/src \
    -v /tmp/ba:/packages \
    --net=my-net \
    --name test-env \
    $BUILD_ENV \
    bash -c "apt-get -y update && apt-get -y install software-properties-common && add-apt-repository -y ppa:deadsnakes/ppa && apt-get -y update && apt-get -y install python3.7 curl && curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py && python3.7 get-pip.py && pip3.7 install testify tox && find /packages -type f -name *.deb -exec apt-get -y install {} \; && sed -i -e 's/TLV_BAD64 = 18446744073709551615L/TLV_BAD64 = 18446744073709551615' /root/assimilation/src/cma/AssimCtypes.py && cd /root/assimilation/src/cma && tox"
#    bash -c "/root/assimilation/src/ci/scripts/run_tests.sh"
  # upload to artifactory
