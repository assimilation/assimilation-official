# vim: smartindent tabstop=4 shiftwidth=4 expandtab number
#
project('assimilation', 'c')
glib = dependency('glib-2.0')
libdeps = [
    meson.get_compiler('c').find_library('libsodium'),
    meson.get_compiler('c').find_library('libpcap'),
    meson.get_compiler('c').find_library('libz'),
    # meson.get_compiler('c').find_library('glib-2.0'),
    glib,
]
include_dirs = include_directories('include')
clientsrc = [
    'clientlib/addrframe.c',
    'clientlib/arpdiscovery.c',
    'clientlib/assimobj.c',
    'clientlib/authlistener.c',
    'clientlib/cdp_min.c',
    'clientlib/childprocess.c',
    'clientlib/cmalib.c',
    'clientlib/compressframe.c',
    'clientlib/configcontext.c',
    'clientlib/cryptcurve25519.c',
    'clientlib/cryptframe.c',
    'clientlib/cstringframe.c',
    'clientlib/discovery.c',
    'clientlib/frame.c',
    'clientlib/frameset.c',
    'clientlib/fsprotocol.c',
    'clientlib/fsqueue.c',
    'clientlib/generic_tlv_min.c',
    'clientlib/gmainfd.c',
    'clientlib/hblistener.c',
    'clientlib/hbsender.c',
    'clientlib/intframe.c',
    'clientlib/ipportframe.c',
    'clientlib/jsondiscovery.c',
    'clientlib/listener.c',
    'clientlib/lldp_min.c',
    'clientlib/logsourcefd.c',
    'clientlib/misc.c',
    'clientlib/nanoprobe.c',
    'clientlib/netaddr.c',
    'clientlib/netgsource.c',
    'clientlib/netio.c',
    'clientlib/netioudp.c',
    'clientlib/nvpairframe.c',
    'clientlib/packetdecoder.c',
    'clientlib/pcap_GSource.c',
    'clientlib/pcap_min.c',
    'clientlib/proj_classes.c',
    'clientlib/reliableudp.c',
    'clientlib/replacement_funs.c',
    'clientlib/resourcecmd.c',
    'clientlib/resourcelsb.c',
    'clientlib/resourcenagios.c',
    'clientlib/resourceocf.c',
    'clientlib/resourcequeue.c',
    'clientlib/seqnoframe.c',
    'clientlib/signframe.c',
    'clientlib/switchdiscovery.c',
    'clientlib/tlvhelper.c',
    'clientlib/unknownframe.c',
]
serversrc = [
    'serverlib/cdp.c',
    'serverlib/dump.c',
    'serverlib/lldp.c',
]
src = [clientsrc, serversrc, 'nanoprobe/nanomain.c']
executable('nanoprobe',
    sources: src,
    dependencies: libdeps,
    include_directories: 'include',
    implicit_include_directories: true,
)
