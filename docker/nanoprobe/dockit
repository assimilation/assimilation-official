#!/bin/bash
# vim:ts=4:sw=4:softtabstop=4:smarttab:expandtab
#
# Build a nanoprobe Docker image on to of our meson Docker image
# We are make sure we build on top of the latest version of the meson image
#
#   Permissible arguments are:
#       (no arguments) - just build the docker image
#       upload - upload our docker image to Docker hub
#       push - same as upload
#
#
set -euo pipefail
MESON_TAG=$(grep -v '#' < ../meson/docker-tag.txt | head -n1)
DOCKER_TAG=$(grep -v '#' < docker-tag.txt | head -n1)

generate_dockerfile() {
    sed -e "s%@MESON_TAG@%${MESON_TAG}%g" \
        -e "s%@RANDOM@%${RANDOM}%g" \
        < dockerfile.in > Dockerfile
}

get_C_and_python_source() {
    HERE=$(pwd)
    rm -fr src/
    mkdir -p ./src src/cma
    cp -a ../getsigningkey.py ../hashes.csv ./src
    (
        set -euo pipefail
        cd ../..
        echo "Copying 'C' source for Docker image..."
        find clientlib include serverlib nanoprobe -name '*.[ch]' -print | cpio -pdmu $HERE/src/
    cp cma/frameinfo.py $HERE/src/cma
    cp include/projectcommon.h.in $HERE/src/include
    )
}

get_C_and_python_source
generate_dockerfile
printf "Building %s: " "$DOCKER_TAG"
QUIET=-q
QUIET=
time docker build ${QUIET} -t ${DOCKER_TAG} . 2>&1 | tee -i build.out
TARDIR=$(mktemp -d )
docker run -v ${TARDIR}:/tmp/tar ${DOCKER_TAG} cp nanoprobe.tar.gz /tmp/tar
tar xvzf  ${TARDIR}/nanoprobe.tar.gz 
rm -fr $TARDIR
echo "Checking integrity of nanoprobe binary"
sha256sum --check sums # Make sure it's a clean copy

case ${1-nothing} in
    *push*|*upload*) docker push ${DOCKER_TAG};;
    nothing);;
    *) echo "Don't know what option ${1} means..."; exit 1;;
esac
