#!/bin/sh
# vim: smartindent tabstop=4 shiftwidth=4 expandtab number
#
#   Set up to create the cma.ubuntu docker image and extract the packages it creates
#   These include both the Assimilation packages and also the libsodium packages
#   These packages are extracted into the 'packages' subdirectory
#
#
# This file is part of the Assimilation Project.
#
# Author: Alan Robertson <alanr@unix.sh>
# Copyright (C) 2014 - Assimilation Systems Limited
#
# Free support is available from the Assimilation Project community - http://assimproj.org
# Paid support is available from Assimilation Systems Limited - http://assimilationsystems.com
#
# The Assimilation software is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# The Assimilation software is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with the Assimilation Project software.  If not, see http://www.gnu.org/licenses/
#
#
#
#
set -e 
ARGS="$*"
cd $1
shift

CODENAME=$(basename $PWD)
NANONAME="assimilation/nanoprobe-$CODENAME"
CMANAME="assimilation/cma-$CODENAME"
DOCKERFILE="$PWD/../Dockerfile"
NANOFILE="$PWD/../nanoDockerfile"
CMAFILE="$PWD/../cmaDockerfile"
STARTFILE="$PWD/../cmaStart"
ADDREPPKG=software-properties-common
OLDADDREPPKG=python-software-properties
ADDPPA='add-apt-repository ppa:openjdk-r/ppa \&\& apt-get update'

BUILD="assimilation/build-$CODENAME"
LOCALWS=$HOME/monitor/src
PKGDIR=$(pwd)/
rm -fr local nanoprobe cma
case $CODENAME in
  precise)  EFLAG='-e s%iproute2%%'
            NEOVERS=neo4j=3.0.0
            NEODIR=/usr/share/neo4j
            JAVAREPOSETUP="RUN apt-get -y install $OLDADDREPPKG \&\& $ADDPPA"
            ;;
  trusty)   NEOVERS=neo4j=3.0.0
            NEODIR=/usr/share/neo4j
            JAVAREPOSETUP="RUN apt-get -y install $ADDREPPKG \&\& $ADDPPA"
            ;;
  *)        EFLAG=""
            NEOVERS=neo4j=3.0.4
            NEODIR=/usr/share/neo4j
            JAVAREPOSETUP="# Skip java ppa repo setup for $CODENAME"
            ;;
esac
case $1 in
  local) 
        mkdir local
        cd local
        pwd
        (D=$PWD; cd ../../../.. && git archive --prefix=src/ -o $D/tip.tar.gz HEAD)

        cat $DOCKERFILE |
        sed -e 's%ENV GITTARZAN .*%ENV GITTARZAN tip.tar.gz%'   \
            -e "s%ubuntu:latest%ubuntu:$CODENAME%" $EFLAG       \
            -e 's%RUN.* mv .*ssimilation-.*%# &%'               \
            -e 's%RUN tar xzf $GITVERSION.*%# &%'               \
            -e 's%RUN service rsyslog start.*%# &%'             \
            -e "s%@NEOVERS@%$NEOVERS%"                          \
            -e "s%@NEODIR@%$NEODIR%"                            \
            -e "s%@JAVAREPOSETUP@%${JAVAREPOSETUP}%"            \
            -e "s%@OURDATE@%$(date)%"                           \
            > Dockerfile
        ;;
    *)  cat $DOCKERFILE | sed -e "s%ubuntu:latest%ubuntu:$CODENAME%" $EFLAG \
                -e "s%@NEOVERS@%$NEOVERS%"                                  \
                -e "s%@NEODIR@%$NEODIR%"                                    \
                -e "s%@JAVAREPOSETUP@%${JAVAREPOSETUP}%"                    \
                -e "s%@OURDATE@%$(date)%" > Dockerfile
        ;;
esac
grep 'FROM.*ubuntu:' Dockerfile

cp /etc/timezone .
docker build -t $BUILD .
rm -fr timezone $PKGDIR/packages
ID=$(docker run -d $BUILD /bin/sleep 5)
# Note that it will include the last part of the from pathname under the to path...
docker cp $ID:/root/assimilation/packages $PKGDIR
echo "Build of $ARGS BUILD complete."
mkdir nanoprobe cma
cp $PKGDIR/packages/*.deb nanoprobe/
PACKAGES=$(ls $PKGDIR/packages)
NANOPKG=$(echo "$PACKAGES" | grep assimilation-nanoprobe)
CMAPKG=$(echo "$PACKAGES" | grep assimilation-cma)
SODIUMPKG=$(echo "$PACKAGES" | grep libsodium_ )
cat $NANOFILE | sed -e "s%ubuntu:latest%ubuntu:$CODENAME%" $EFLAG   \
            -e "s%@NANOPKG@%${NANOPKG}%"                            \
            -e "s%@SODIUMPKG@%${SODIUMPKG}%"                        \
            > nanoprobe/Dockerfile
cd nanoprobe
docker build -t $NANONAME .
echo "Build of $ARGS $NANONAME complete."
case $CODENAME in
  lucid)    echo "No CMA for $CODENAME. We're done."; exit 0;;
esac
cd ..
cp $PKGDIR/packages/*cma*.deb $STARTFILE cma/
cat $CMAFILE | sed -e "s%@NANOBASE@%${NANONAME}:latest%" ${EFLAG}   \
            -e "s%@JAVAREPOSETUP@%${JAVAREPOSETUP}%"                \
            -e "s%@CMAPKG@%${CMAPKG}%"                              \
            > cma/Dockerfile
cd cma
docker build -t $CMANAME .
echo "Build of $ARGS $CMANAME complete."
