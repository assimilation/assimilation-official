#
#
# This file is part of the Assimilation Project.
#
# Copyright (C) 2011, 2012 - Alan Robertson <alanr@unix.sh>
#
#  The Assimilation software is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  The Assimilation software is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with the Assimilation Project software.  If not, see http://www.gnu.org/licenses/
#
#
SET (FST_H ${BINROOT}/include/framesettypes.h)
SET (FT_H ${BINROOT}/include/frametypes.h)
SET (GENCMD ${CMAKE_CURRENT_SOURCE_DIR}/../cma/frameinfo.py)

#
#	Create a header file with some of our project (install) directories defined
#
configure_file(${PROJECT_SOURCE_DIR}/include/projectcommon.h.in ${PROJECT_BINARY_DIR}/include/projectcommon.h)

#
#	Generate include/framesettypes.h from the python code that has all the definitions
#
ADD_CUSTOM_COMMAND(
   OUTPUT ${FST_H}
   COMMAND python ${GENCMD} framesettypes ${FST_H}
   DEPENDS ${GENCMD}
   )
ADD_CUSTOM_TARGET(generate_framesettypes DEPENDS ${FST_H})

#
#	Generate include/frametypes.h from the python code that has all the definitions
#
ADD_CUSTOM_COMMAND(
   OUTPUT ${FT_H}
   COMMAND python ${GENCMD} frametypes ${FT_H}
   DEPENDS ${GENCMD}
   )
ADD_CUSTOM_TARGET(generate_frametypes DEPENDS ${FT_H})


#
#	We generate _two_ versions of AssimCtypes.py - one for testing and one for production
#	AssimCtypes.py is a bunch of ctypes definitions for the python bindings for our C classes
#	It is generated by the wonderful ctypesgen.py program.
#	We wrote a python program (genpybindings.py) for invoking ctypesgen with all the right
#	parameters for our situation, and we'll wind up invoking it twice - once for each version
#	of AssimCtypes that we want to create.
#
SET (CTYPESRC ${SRCROOT}/cma/AssimCtypes.py)
SET (CTYPEBIN ${SRCROOT}/cma/AssimCtypes.py-install)

#
#	Generate a version of AssimCtypes.py for testing
#	This one uses the libraries in the build tree
#
ADD_CUSTOM_COMMAND(
   OUTPUT ${CTYPESRC}
   COMMAND python ${BUILDTOOLS}/genpybindings.py ${CTYPESRC} ${SRCROOT} ${BINROOT} ${BINROOT}/clientlib lib${CLIENTLIB}
   DEPENDS ../include/*.h ${BINROOT}/include/framesettypes.h ${BINROOT}/include/frametypes.h ${BINROOT}/include/projectcommon.h ${CLIENTLIB}
   )
ADD_CUSTOM_TARGET(generate_ctypes_src ALL DEPENDS ${CTYPESRC} ${CLIENTLIB})
SET_SOURCE_FILES_PROPERTIES(${CTYPESRC}  PROPERTIES GENERATED 1)

#
#	Generate a version of AssimCtypes.py for production
#	This one uses the libraries installed in the system.
#
ADD_CUSTOM_COMMAND(
   OUTPUT ${CTYPEBIN}
   COMMAND python ${BUILDTOOLS}/genpybindings.py ${CTYPEBIN} ${SRCROOT} ${BINROOT} ${InstallLIBS} lib${CLIENTLIB}
   DEPENDS ../include/*.h ${BINROOT}/include/framesettypes.h ${BINROOT}/include/frametypes.h ${BINROOT}/include/projectcommon.h ${CLIENTLIB}
   )
ADD_CUSTOM_TARGET(generate_ctypes_bin ALL DEPENDS ${CTYPEBIN})
SET_SOURCE_FILES_PROPERTIES(${CTYPEBIN} PROPERTIES GENERATED 1)



add_library (${CLIENTLIB} SHARED proj_classes.c cdp_min.c lldp_min.c pcap_min.c generic_tlv_min.c pcap_GSource.c tlvhelper.c frameset.c frame.c intframe.c addrframe.c cstringframe.c signframe.c unknownframe.c seqnoframe.c packetdecoder.c arpdiscovery.c discovery.c switchdiscovery.c netio.c netioudp.c netgsource.c netaddr.c hblistener.c hbsender.c cryptframe.c cryptcurve25519.c compressframe.c nvpairframe.c listener.c configcontext.c assimobj.c authlistener.c jsondiscovery.c nanoprobe.c cmalib.c ipportframe.c misc.c fsqueue.c fsprotocol.c reliableudp.c replacement_funs.c gmainfd.c logsourcefd.c childprocess.c resourcecmd.c resourceocf.c resourcequeue.c resourcelsb.c resourcenagios.c)
SET_SOURCE_FILES_PROPERTIES(${FST_H} PROPERTIES GENERATED 1)
SET_SOURCE_FILES_PROPERTIES(${FT_H} PROPERTIES GENERATED 1)
ADD_DEPENDENCIES(${CLIENTLIB} generate_framesettypes generate_frametypes)

IF(WIN32)
  find_library (PCAP_LIB wpcap PATHS "C:/winpcap/lib")
  find_library (GLIB_LIB glib-2.0 PATHS "C:/Glib/Glib-2-28-8-1/lib") 
  find_library (WS2_LIB ws2_32 )
  target_link_libraries(${CLIENTLIB} ${PCAP_LIB})
  target_link_libraries(${CLIENTLIB} ${GLIB_LIB})
  target_link_libraries(${CLIENTLIB} ${WS2_LIB})
ELSE(WIN32)
  target_link_libraries (${CLIENTLIB} -lpcap -lglib-2.0 -lrt -lz -lsodium)
  install(TARGETS ${CLIENTLIB} COMPONENT nanoprobe-component LIBRARY DESTINATION ${InstallLIBS})
ENDIF(WIN32)
