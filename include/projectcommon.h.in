/**
 * @file
 * @brief Project common header file.
 * @details Every source file is supposed to include this header file.
 * This file is part of the Assimilation Project.
 *
 * @author Copyright &copy; 2011, 2012, 2013 - Alan Robertson <alanr@unix.sh>
 * @n
 *  The Assimilation software is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  The Assimilation software is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with the Assimilation Project software.  If not, see http://www.gnu.org/licenses/
 */
#ifndef _PROJECTCOMMON_H
#define _PROJECTCOMMON_H
#define	DIMOF(a)	(sizeof(a)/sizeof(a[0]))	///< Return dimension of array.
#define	MALLOC0(nbytes)	g_try_malloc0(nbytes)		///< should it just call g_malloc?
#define	MALLOC(nbytes)	g_try_malloc(nbytes)		///< should it just call g_malloc?
#define	MALLOCTYPE(t)	(g_try_new0(t, 1))		///< malloc an object of type 't'.
							///< Or should it just call g_new0?
#define	FREE(m)		g_free(m)			///< Our interface to free

#define	FSTATIC		/* Static function */
#define	FMT_64BIT	"%"G_GINT64_MODIFIER				///< Format designator for a 64 bit integer

#ifdef _MSC_VER
#ifndef _W64
#	define _W64
#endif
#	define	WINEXPORT __declspec( dllexport )
#	define MSG_DONTWAIT	0	// This could be trouble!!
#if _MSC_VER < 1300
#	define MSG_TRUNC	0
#endif
#else
#	define	WINEXPORT /* Nothing */
#	define HAVE_PCAP_SET_RFMON	1	// We should test for this...
#endif

#ifdef WIN32
#	undef HAS_FORK
#else
#	define	HAS_FORK
#endif

#include <glib.h>
#if !HAVE_G_UNLINK
	/* #if (GLIB_MINOR_VERSION < 6) - but this doesn't work as I expected */
#	define	g_unlink(arg)	unlink(arg)
#endif

#ifndef g_info
#	define g_info(...)	g_log(G_LOG_DOMAIN, G_LOG_LEVEL_INFO, __VA_ARGS__)
#endif

// This is a totally broken way to do this - but it seems to work at the moment...
#if GLIB_MINOR_VERSION < 25
void g_slist_free_full(GSList *list, GDestroyNotify free_func);
#endif
#ifdef CTYPESGEN
#	undef g_slist_next
#	define g_slist_next(slist)	(slist->next)
	void g_slist_free(GSList *list);
#endif


#define	DISCOVERY_DIR	"@DISCOVERYINSTALL@"
#define	CMAADDR		"@CMAADDR@"
#define	NANOLISTENADDR	"@NANOLISTENADDR@"
#define	VERSION_STRING	"@PROJVERS@"
#define	SHORT_LICENSE_STRING	"@LICENSE_SHORT@"
#define	LONG_LICENSE_STRING	"@LICENSE_LONG@"

#ifndef HAVE_G_GET_REAL_TIME
WINEXPORT gint64 g_get_real_time(void);
#endif
#ifndef HAVE_G_GET_MONOTONIC_TIME
WINEXPORT gint64 g_get_monotonic_time(void);
#endif


#include <proj_classes.h>

#endif /* _PROJECTCOMMON_H */
